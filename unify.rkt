(unify '(#(x) b c) '(a #(x) c) '())
(let ((v #(x))
      (u #(x)))
  (unify `(,v b c) `(a ,u c) '()))

(unify
  '(a b c . #(x))
  '()
  '())

(unify
  '(#(x_0) . #(x_0))
  '(a b c . #(x))
  '())

  (unify
    #(x_0)
    'a
    '())
  
  (unify
    #(x_0)
    '(b c . #(x))
    '((#(x_0) . a)))

  (unify
    #(x_0)
    '()
    '((#(x_0) b c . #(x)) (#(x_0) . a)))


(unify
  '(#(x_0) . #(x_0))
  #(x_0)
  '((#(x_0) b c . #(x)) (#(x_0) . a)))


(unify
  #(x_0)
  'b
  '((#(x_0) b c . #(x)) (#(x_0) . a)))


(unify
  #(x_0)
  '(c . #(x))
  '((#(x_0) . b) (#(x_0) b c . #(x)) (#(x_0) . a)))


(unify
  #(x_0)
  '()
  '((#(x_0) c . #(x)) (#(x_0) . b) (#(x_0) b c . #(x)) (#(x_0) . a)))

(unify
  '(#(x_0) . #(x_0))
  #(x_0)
  '((#(x_0) c . #(x)) (#(x_0) . b) (#(x_0) b c . #(x)) (#(x_0) . a)))


(unify
  #(x_0)
  'c
  '((#(x_0) c . #(x)) (#(x_0) . b) (#(x_0) b c . #(x)) (#(x_0) . a)))

(unify
  #(x_0)
  #(x)
  '((#(x_0) . c) (#(x_0) c . #(x)) (#(x_0) . b) (#(x_0) b c . #(x)) (#(x_0) . a)))

(unify
  #(x_0)
  '()
  '((#(x_0) . #(x)) (#(x_0) . c) (#(x_0) c . #(x)) (#(x_0) . b) (#(x_0) b c . #(x)) (#(x_0) . a)))

(unify
  '(#(x_0) . #(x_0))
  #(x_0)
  '((#(x_0) . #(x)) (#(x_0) . c) (#(x_0) c . #(x)) (#(x_0) . b) (#(x_0) b c . #(x)) (#(x_0) . a)))
